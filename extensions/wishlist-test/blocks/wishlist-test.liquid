{% style %}
  .wishlist-container button {
    display: flex;
    width: 100%;
    height: 50px;
    justify-content: center;
    align-items: center;
    gap: 30px;
    color: {{ block.settings.colour }};
    font-size: medium;
    font-weight: 600;
  }

  .wishlist-container svg {
    width: 30px;
    height: 30px;
  }
{% endstyle %}

<div class="wishlist-container" x-data="wishlist">
  <button @click.debounce="addToWishlist">
    <svg
      width="800px"
      height="800px"
      viewBox="0 0 24 24"
      stroke-width="2"
      stroke="{{ block.settings.colour }}"
      :fill=" wishlisted ? '{{ block.settings.colour }}' : '#fff' ">
      <path d="M2 9.1371C2 14 6.01943 16.5914 8.96173 18.9109C10 19.7294 11 20.5 12 20.5C13 20.5 14 19.7294 15.0383 18.9109C17.9806 16.5914 22 14 22 9.1371C22 4.27416 16.4998 0.825464 12 5.50063C7.50016 0.825464 2 4.27416 2 9.1371Z" />
    </svg>
    <span>{{ block.settings.text }}</span>
  </button>
</div>

<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('wishlist', () => ({
            wishlisted: false,
            appUrl: 'https://monitor-argued-specials-reasonably.trycloudflare.com',

            init(){
              if(this.wishlisted){
                this.wishlisted = false
              }

              fetch(this.appUrl + "/api/wishlist?customerId={{ customer.id }}&productId={{ product.id }}&shop={{ shop.permanent_domain }}")
              .then((response) => response.json())
              .then((result) => {
                this.wishlisted = result.wishlisted
              })
              .catch((error) => console.error(error));
            },
   
            addToWishlist() {
                {%  unless customer %} 
                  alert("Please login to add to your wishlist"); 
                  return  window.location.href = '/account/login'
                {% endunless %}

                const formData = new FormData();
                formData.append("customerId", "{{ customer.id }}")
                formData.append("productId", "{{ product.id }}")
                formData.append("shop", "{{ shop.permanent_domain }}")
                formData.append("_action", this.wishlisted ? "DELETE" : "CREATE")

                const requestOptions = {
                  method: "POST",
                  body: formData,
                  redirect: "follow"
                };

                fetch(this.appUrl + "/api/wishlist", requestOptions)
                  .then((response) => response.text())
                  .then((result) => {
                    console.log(result)
                    this.wishlisted = !this.wishlisted;
                  })
                  .catch((error) => console.error(error));

            }
        }))
    })
</script>

{% schema %}
  {
    "name": "Wishlist test",
    "target": "section",
    "settings": [
      {
        "type": "product",
        "id": "product",
        "label": "product",
        "autofill": true
      }, {
        "type": "color",
        "id": "colour",
        "label": "Star Colour",
        "default": "#ff0000"
      }, {
        "type": "text",
        "id": "text",
        "label": "Text"
      }
    ]
  }
{% endschema %}